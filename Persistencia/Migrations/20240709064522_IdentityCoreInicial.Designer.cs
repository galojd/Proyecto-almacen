// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Migrations
{
    [DbContext(typeof(AlmacenOnlineContext))]
    [Migration("20240709064522_IdentityCoreInicial")]
    partial class IdentityCoreInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.entities.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("NombreCategoria")
                        .HasColumnType("longtext");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("19f3d846-3d87-4ccf-8120-f7d6e6c45e16"),
                            NombreCategoria = "Placa madre"
                        },
                        new
                        {
                            CategoriaId = new Guid("55eb20f0-59db-402e-87e1-ba366915766e"),
                            NombreCategoria = "Tarjeta gráfica"
                        },
                        new
                        {
                            CategoriaId = new Guid("d22ab31f-9451-4dc6-a849-19790a4422b1"),
                            NombreCategoria = "Fuente de alimentación"
                        },
                        new
                        {
                            CategoriaId = new Guid("311da66f-5494-4b12-93bd-65471f93f4c6"),
                            NombreCategoria = "Memoria RAM"
                        },
                        new
                        {
                            CategoriaId = new Guid("e56bd5b2-65f2-4f69-86a5-e3925be8b268"),
                            NombreCategoria = "Disco duro SSD"
                        },
                        new
                        {
                            CategoriaId = new Guid("8bc7b025-5ed5-4f62-999f-ecbf15230cd8"),
                            NombreCategoria = "Procesador"
                        });
                });

            modelBuilder.Entity("Dominio.entities.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DNI")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Fecharegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<string>("RUC")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ClienteId = new Guid("e54d164c-9c75-4717-882a-cc75b5000fd3"),
                            DNI = "74031920",
                            Direccion = "Calle D, 90, Lima",
                            Email = "usuario447@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8515),
                            Nombres = "Ana Luis",
                            RUC = "20428729201",
                            Telefono = "898794259"
                        },
                        new
                        {
                            ClienteId = new Guid("e2796f59-acb7-4ddf-ab94-967bc17f39cc"),
                            DNI = "61606075",
                            Direccion = "Calle B, 22, Arequipa",
                            Email = "contacto583@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8526),
                            Nombres = "Diego Pedro",
                            RUC = "20428729201",
                            Telefono = "158227086"
                        },
                        new
                        {
                            ClienteId = new Guid("185c3c62-9f9d-4049-b75c-a525bf9ca611"),
                            DNI = "32483881",
                            Direccion = "Calle A, 71, Lima",
                            Email = "correo794@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8531),
                            Nombres = "Lucía Ana",
                            RUC = "20428729201",
                            Telefono = "784177984"
                        },
                        new
                        {
                            ClienteId = new Guid("2ae221e8-26ab-4a89-a285-9394ed9d54fc"),
                            DNI = "74587820",
                            Direccion = "Calle C, 96, Trujillo",
                            Email = "usuario833@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8536),
                            Nombres = "Pedro Luis",
                            RUC = "20428729201",
                            Telefono = "854608599"
                        },
                        new
                        {
                            ClienteId = new Guid("34b5b3a4-6500-487c-8ba4-096e2ab4dafd"),
                            DNI = "61323090",
                            Direccion = "Calle B, 84, Cusco",
                            Email = "cliente847@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8541),
                            Nombres = "Lucía Laura",
                            RUC = "20428729201",
                            Telefono = "280998310"
                        },
                        new
                        {
                            ClienteId = new Guid("69e92ba4-af53-4b35-bd3f-44c41834f76b"),
                            DNI = "92813222",
                            Direccion = "Calle D, 9, Piura",
                            Email = "correo125@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8546),
                            Nombres = "Diego Carlos",
                            RUC = "20428729201",
                            Telefono = "822865713"
                        },
                        new
                        {
                            ClienteId = new Guid("39a50513-d633-49b3-9aa2-a660e8e29134"),
                            DNI = "38012646",
                            Direccion = "Calle B, 31, Trujillo",
                            Email = "usuario705@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8577),
                            Nombres = "Laura Pedro",
                            RUC = "20428729201",
                            Telefono = "542068233"
                        },
                        new
                        {
                            ClienteId = new Guid("3589a5ce-059e-49cf-a9e7-f5055b22677d"),
                            DNI = "67220744",
                            Direccion = "Calle D, 21, Arequipa",
                            Email = "comprador352@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8582),
                            Nombres = "Sofía Lucía",
                            RUC = "20428729201",
                            Telefono = "573812581"
                        },
                        new
                        {
                            ClienteId = new Guid("abbbdc14-1583-447b-a505-d3d27d0e73e0"),
                            DNI = "34586180",
                            Direccion = "Calle B, 89, Arequipa",
                            Email = "usuario646@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8589),
                            Nombres = "María Carlos",
                            RUC = "20428729201",
                            Telefono = "598916548"
                        },
                        new
                        {
                            ClienteId = new Guid("98bcc89d-8c56-4322-b213-2640d5d07686"),
                            DNI = "67714031",
                            Direccion = "Calle A, 19, Trujillo",
                            Email = "contacto10@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8594),
                            Nombres = "María María",
                            RUC = "20428729201",
                            Telefono = "306549007"
                        },
                        new
                        {
                            ClienteId = new Guid("3b1de3ee-d174-4cd8-90eb-747557bf3597"),
                            DNI = "28843581",
                            Direccion = "Calle D, 46, Piura",
                            Email = "cliente332@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8599),
                            Nombres = "Diego Juan",
                            RUC = "20428729201",
                            Telefono = "567593358"
                        },
                        new
                        {
                            ClienteId = new Guid("94ab8811-28b5-4349-a0ce-5bbb2b5db5da"),
                            DNI = "76569211",
                            Direccion = "Calle D, 10, Trujillo",
                            Email = "cliente301@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8604),
                            Nombres = "Luis Carlos",
                            RUC = "20428729201",
                            Telefono = "585606322"
                        },
                        new
                        {
                            ClienteId = new Guid("146374ef-5bc3-4aa1-86f2-dd31b0905f23"),
                            DNI = "33447984",
                            Direccion = "Calle B, 39, Piura",
                            Email = "comprador545@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8608),
                            Nombres = "Carlos Carlos",
                            RUC = "20428729201",
                            Telefono = "876015641"
                        },
                        new
                        {
                            ClienteId = new Guid("c1e92e1e-99c1-4229-be0f-ffb166443d35"),
                            DNI = "75946486",
                            Direccion = "Calle A, 61, Lima",
                            Email = "cliente24@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8613),
                            Nombres = "Diego Pedro",
                            RUC = "20428729201",
                            Telefono = "238871430"
                        },
                        new
                        {
                            ClienteId = new Guid("072ce1a2-d27e-4bbc-8dee-3bb4a26e2c52"),
                            DNI = "27768334",
                            Direccion = "Calle C, 54, Lima",
                            Email = "contacto352@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8617),
                            Nombres = "Ana Juan",
                            RUC = "20428729201",
                            Telefono = "759133910"
                        },
                        new
                        {
                            ClienteId = new Guid("d13b1ade-a82c-4399-b1f5-3fadbe0c0d69"),
                            DNI = "10303286",
                            Direccion = "Calle D, 78, Lima",
                            Email = "cliente877@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8621),
                            Nombres = "Laura Pedro",
                            RUC = "20428729201",
                            Telefono = "629926953"
                        },
                        new
                        {
                            ClienteId = new Guid("20c6b5ab-03a9-40d4-89c3-556fc9e82a54"),
                            DNI = "17744149",
                            Direccion = "Calle D, 79, Cusco",
                            Email = "correo74@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8627),
                            Nombres = "Luis Luis",
                            RUC = "20428729201",
                            Telefono = "489212141"
                        },
                        new
                        {
                            ClienteId = new Guid("7435aae5-c69c-4bf2-bcbb-274ae968b7e1"),
                            DNI = "18071500",
                            Direccion = "Calle A, 3, Trujillo",
                            Email = "usuario704@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8656),
                            Nombres = "María Sofía",
                            RUC = "20428729201",
                            Telefono = "710413041"
                        },
                        new
                        {
                            ClienteId = new Guid("6e33393e-83c3-4ef4-ab6c-d01ef9ada7ad"),
                            DNI = "54458992",
                            Direccion = "Calle D, 22, Lima",
                            Email = "cliente336@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8661),
                            Nombres = "Pedro Luis",
                            RUC = "20428729201",
                            Telefono = "581813392"
                        },
                        new
                        {
                            ClienteId = new Guid("b9ae2790-3b4c-40eb-81fc-b98a0c793264"),
                            DNI = "31483201",
                            Direccion = "Calle E, 15, Cusco",
                            Email = "cliente137@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8666),
                            Nombres = "Ana Sofía",
                            RUC = "20428729201",
                            Telefono = "612127311"
                        },
                        new
                        {
                            ClienteId = new Guid("cb75628a-28ae-4303-acf2-40f537993669"),
                            DNI = "12902089",
                            Direccion = "Calle C, 36, Trujillo",
                            Email = "cliente847@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8670),
                            Nombres = "María Sofía",
                            RUC = "20428729201",
                            Telefono = "844307363"
                        },
                        new
                        {
                            ClienteId = new Guid("559fa0ec-ad09-48f6-a84f-f7ada5cc57b8"),
                            DNI = "63266548",
                            Direccion = "Calle D, 5, Piura",
                            Email = "cliente626@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8674),
                            Nombres = "Carlos Juan",
                            RUC = "20428729201",
                            Telefono = "308354253"
                        },
                        new
                        {
                            ClienteId = new Guid("743b703b-e811-4d79-893b-2077883964ce"),
                            DNI = "28792775",
                            Direccion = "Calle A, 88, Lima",
                            Email = "cliente640@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8678),
                            Nombres = "Laura Pedro",
                            RUC = "20428729201",
                            Telefono = "363206263"
                        },
                        new
                        {
                            ClienteId = new Guid("c85d1256-f316-4067-a37d-07438ed155c2"),
                            DNI = "99479770",
                            Direccion = "Calle B, 46, Piura",
                            Email = "cliente183@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8683),
                            Nombres = "Luis María",
                            RUC = "20428729201",
                            Telefono = "534247091"
                        },
                        new
                        {
                            ClienteId = new Guid("e22d6121-aa6e-4c8b-8ee7-8bae9f8790a2"),
                            DNI = "30223230",
                            Direccion = "Calle E, 49, Trujillo",
                            Email = "usuario193@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8689),
                            Nombres = "Laura Sofía",
                            RUC = "20428729201",
                            Telefono = "559682528"
                        },
                        new
                        {
                            ClienteId = new Guid("1f5bef0a-0347-434c-9a04-e8cfb45ea512"),
                            DNI = "74560453",
                            Direccion = "Calle D, 52, Piura",
                            Email = "cliente812@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8693),
                            Nombres = "Laura Juan",
                            RUC = "20428729201",
                            Telefono = "417315050"
                        },
                        new
                        {
                            ClienteId = new Guid("abe74a75-ae3e-4a4d-b2e5-6fdacb203135"),
                            DNI = "11191493",
                            Direccion = "Calle E, 16, Lima",
                            Email = "usuario430@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8698),
                            Nombres = "Lucía Pedro",
                            RUC = "20428729201",
                            Telefono = "888888057"
                        },
                        new
                        {
                            ClienteId = new Guid("d8c2986d-5775-4e46-a476-9086da2de01d"),
                            DNI = "70091790",
                            Direccion = "Calle B, 22, Arequipa",
                            Email = "correo713@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8702),
                            Nombres = "Luis Ana",
                            RUC = "20428729201",
                            Telefono = "808657605"
                        },
                        new
                        {
                            ClienteId = new Guid("805c723f-4bda-4c1d-bccf-ba765d057738"),
                            DNI = "52459379",
                            Direccion = "Calle C, 19, Trujillo",
                            Email = "correo136@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8730),
                            Nombres = "Lucía Ana",
                            RUC = "20428729201",
                            Telefono = "907558272"
                        },
                        new
                        {
                            ClienteId = new Guid("762d2ec6-f554-4351-8d54-4590b5365411"),
                            DNI = "72266226",
                            Direccion = "Calle B, 44, Trujillo",
                            Email = "contacto865@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8734),
                            Nombres = "Diego Juan",
                            RUC = "20428729201",
                            Telefono = "278572453"
                        },
                        new
                        {
                            ClienteId = new Guid("9ffd09b4-c9fe-4706-ba7c-e065c0c28b1c"),
                            DNI = "52608402",
                            Direccion = "Calle C, 92, Piura",
                            Email = "comprador523@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8739),
                            Nombres = "Luis Lucía",
                            RUC = "20428729201",
                            Telefono = "328164170"
                        },
                        new
                        {
                            ClienteId = new Guid("23e51e2d-6859-4822-a757-67103616b687"),
                            DNI = "21940017",
                            Direccion = "Calle A, 18, Trujillo",
                            Email = "correo33@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8743),
                            Nombres = "Carlos María",
                            RUC = "20428729201",
                            Telefono = "247293245"
                        },
                        new
                        {
                            ClienteId = new Guid("99a175d2-b5d7-4e61-b7f1-4106ec6bc67a"),
                            DNI = "63018711",
                            Direccion = "Calle B, 84, Piura",
                            Email = "cliente277@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8749),
                            Nombres = "Sofía Carlos",
                            RUC = "20428729201",
                            Telefono = "687972854"
                        },
                        new
                        {
                            ClienteId = new Guid("3ff14285-2536-4346-a0ad-ac80250764dd"),
                            DNI = "27086838",
                            Direccion = "Calle D, 98, Arequipa",
                            Email = "contacto703@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8753),
                            Nombres = "Sofía Ana",
                            RUC = "20428729201",
                            Telefono = "983441752"
                        },
                        new
                        {
                            ClienteId = new Guid("b7ab3caa-ea41-42a3-8947-3aa2e0096ff8"),
                            DNI = "56094260",
                            Direccion = "Calle B, 98, Trujillo",
                            Email = "usuario939@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8757),
                            Nombres = "Sofía Lucía",
                            RUC = "20428729201",
                            Telefono = "221838571"
                        },
                        new
                        {
                            ClienteId = new Guid("a3f862c3-5c95-4f1f-ba0f-9304a2ce8a54"),
                            DNI = "84547008",
                            Direccion = "Calle E, 71, Piura",
                            Email = "contacto416@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8761),
                            Nombres = "Sofía Ana",
                            RUC = "20428729201",
                            Telefono = "259136534"
                        },
                        new
                        {
                            ClienteId = new Guid("d6de0b72-8105-4e27-bb98-3761a6ea5933"),
                            DNI = "59787142",
                            Direccion = "Calle E, 2, Cusco",
                            Email = "cliente847@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8767),
                            Nombres = "Pedro Ana",
                            RUC = "20428729201",
                            Telefono = "385842380"
                        },
                        new
                        {
                            ClienteId = new Guid("2d6cd22b-cc3a-4e3d-96bb-87a525507385"),
                            DNI = "67490942",
                            Direccion = "Calle E, 3, Piura",
                            Email = "cliente161@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8771),
                            Nombres = "María Ana",
                            RUC = "20428729201",
                            Telefono = "410681979"
                        },
                        new
                        {
                            ClienteId = new Guid("c5469194-907c-4f9c-a2c4-44568950a049"),
                            DNI = "34826166",
                            Direccion = "Calle C, 77, Cusco",
                            Email = "cliente169@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8775),
                            Nombres = "Carlos Luis",
                            RUC = "20428729201",
                            Telefono = "430662889"
                        },
                        new
                        {
                            ClienteId = new Guid("b23b4b40-a557-4977-bccc-776f162fe65e"),
                            DNI = "27516469",
                            Direccion = "Calle E, 52, Arequipa",
                            Email = "correo44@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8779),
                            Nombres = "Diego Ana",
                            RUC = "20428729201",
                            Telefono = "338001075"
                        },
                        new
                        {
                            ClienteId = new Guid("2bafddb5-f6bd-483a-93a3-0742d58d5d24"),
                            DNI = "98893574",
                            Direccion = "Calle A, 21, Cusco",
                            Email = "comprador679@example.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8807),
                            Nombres = "Lucía Ana",
                            RUC = "20428729201",
                            Telefono = "290588259"
                        },
                        new
                        {
                            ClienteId = new Guid("407af8c9-ed8c-44d2-b9ca-98e1b34716d9"),
                            DNI = "75501278",
                            Direccion = "Calle C, 18, Trujillo",
                            Email = "cliente559@hotmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8812),
                            Nombres = "Laura María",
                            RUC = "20428729201",
                            Telefono = "456286636"
                        },
                        new
                        {
                            ClienteId = new Guid("802d71f9-4b4d-47de-85fb-d164ec5d7216"),
                            DNI = "17524683",
                            Direccion = "Calle B, 80, Cusco",
                            Email = "cliente838@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8816),
                            Nombres = "Ana Carlos",
                            RUC = "20428729201",
                            Telefono = "293090187"
                        },
                        new
                        {
                            ClienteId = new Guid("4f50c028-6878-4b5a-9a88-842a9fac37d9"),
                            DNI = "44078247",
                            Direccion = "Calle D, 95, Piura",
                            Email = "comprador467@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8820),
                            Nombres = "Laura Juan",
                            RUC = "20428729201",
                            Telefono = "285795366"
                        },
                        new
                        {
                            ClienteId = new Guid("29ab1cb0-029e-41e7-9ea1-6f21c86b17fe"),
                            DNI = "69879300",
                            Direccion = "Calle D, 89, Piura",
                            Email = "cliente756@yahoo.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8825),
                            Nombres = "Diego Luis",
                            RUC = "20428729201",
                            Telefono = "978778826"
                        },
                        new
                        {
                            ClienteId = new Guid("2ca29e10-04ed-4e19-81ef-1d3c6d660602"),
                            DNI = "76998441",
                            Direccion = "Calle B, 53, Piura",
                            Email = "contacto754@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8829),
                            Nombres = "Lucía Carlos",
                            RUC = "20428729201",
                            Telefono = "755850393"
                        },
                        new
                        {
                            ClienteId = new Guid("e512828d-2157-425f-ac45-f6ebdadd8a35"),
                            DNI = "20609013",
                            Direccion = "Calle A, 82, Lima",
                            Email = "contacto508@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8833),
                            Nombres = "Juan Carlos",
                            RUC = "20428729201",
                            Telefono = "569732748"
                        },
                        new
                        {
                            ClienteId = new Guid("46bd69da-64af-4a84-ba4a-42a8cffa9710"),
                            DNI = "16352421",
                            Direccion = "Calle C, 2, Cusco",
                            Email = "correo880@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8837),
                            Nombres = "Juan Diego",
                            RUC = "20428729201",
                            Telefono = "344655070"
                        },
                        new
                        {
                            ClienteId = new Guid("5e764bd0-73f0-4e6d-94cf-b9f4b2113265"),
                            DNI = "79350623",
                            Direccion = "Calle E, 62, Arequipa",
                            Email = "comprador947@outlook.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8842),
                            Nombres = "Sofía Carlos",
                            RUC = "20428729201",
                            Telefono = "525334838"
                        },
                        new
                        {
                            ClienteId = new Guid("262f8e43-3c50-4c2e-8808-386268259b3b"),
                            DNI = "34553407",
                            Direccion = "Calle B, 50, Trujillo",
                            Email = "usuario571@gmail.com",
                            Fecharegistro = new DateTime(2024, 7, 9, 6, 45, 21, 833, DateTimeKind.Utc).AddTicks(8846),
                            Nombres = "María Diego",
                            RUC = "20428729201",
                            Telefono = "201702762"
                        });
                });

            modelBuilder.Entity("Dominio.entities.CompraPago", b =>
                {
                    b.Property<Guid>("CompraPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("MetodoPagoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("MontoPago")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("CompraPagoId");

                    b.HasIndex("MetodoPagoId");

                    b.ToTable("CompraPago");
                });

            modelBuilder.Entity("Dominio.entities.DatosEscaneo", b =>
                {
                    b.Property<Guid>("DatosEscaneoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("AnteriorStock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("NuevoStock")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("char(36)");

                    b.HasKey("DatosEscaneoId");

                    b.ToTable("DatosEscaneo");
                });

            modelBuilder.Entity("Dominio.entities.DetalleInventario", b =>
                {
                    b.Property<Guid>("DetalleInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("InventarioId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("StockAnterior")
                        .HasColumnType("int");

                    b.Property<int?>("StockIngreso")
                        .HasColumnType("int");

                    b.Property<int?>("StockTotal")
                        .HasColumnType("int");

                    b.HasKey("DetalleInventarioId");

                    b.HasIndex("InventarioId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleInventario");
                });

            modelBuilder.Entity("Dominio.entities.DetallePedido", b =>
                {
                    b.Property<Guid>("DetallePedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VentaId")
                        .HasColumnType("char(36)");

                    b.HasKey("DetallePedidoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallePedido");
                });

            modelBuilder.Entity("Dominio.entities.Devolucion", b =>
                {
                    b.Property<Guid>("DevolucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DetallePedidoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DevolucionId");

                    b.HasIndex("DetallePedidoId");

                    b.ToTable("Devolucion");
                });

            modelBuilder.Entity("Dominio.entities.Inventario", b =>
                {
                    b.Property<Guid>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("CantidadProducto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ProveedorId")
                        .HasColumnType("char(36)");

                    b.HasKey("InventarioId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("Dominio.entities.InventarioProducto", b =>
                {
                    b.Property<Guid>("InventarioProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("Fechaentrega")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InventarioId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("PrecioTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("ProductoProveedorId")
                        .HasColumnType("char(36)");

                    b.HasKey("InventarioProductoId");

                    b.HasIndex("InventarioId");

                    b.HasIndex("ProductoProveedorId");

                    b.ToTable("InventarioProducto");
                });

            modelBuilder.Entity("Dominio.entities.MetodoPago", b =>
                {
                    b.Property<Guid>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("TipoMetodo")
                        .HasColumnType("longtext");

                    b.HasKey("MetodoPagoId");

                    b.ToTable("MetodoPago");

                    b.HasData(
                        new
                        {
                            MetodoPagoId = new Guid("bcd7e399-f6c0-4c62-9384-9c09db747bc6"),
                            TipoMetodo = "efectivo"
                        },
                        new
                        {
                            MetodoPagoId = new Guid("c30fa8e1-6e41-463f-b148-cdf8632574f1"),
                            TipoMetodo = "Visa"
                        },
                        new
                        {
                            MetodoPagoId = new Guid("8cb8e463-d57e-435b-9c7b-db23e06355ec"),
                            TipoMetodo = "MasterCard"
                        },
                        new
                        {
                            MetodoPagoId = new Guid("57cc5106-ecfe-4446-addf-25189c512fe8"),
                            TipoMetodo = "American Express"
                        },
                        new
                        {
                            MetodoPagoId = new Guid("fc76310c-facb-4ed5-b4b3-d824839d80ef"),
                            TipoMetodo = "PayPal"
                        });
                });

            modelBuilder.Entity("Dominio.entities.PrecioWeb", b =>
                {
                    b.Property<Guid>("PrecioWebId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("PrecioWebId");

                    b.ToTable("PrecioWeb");
                });

            modelBuilder.Entity("Dominio.entities.PrecioWebProducto", b =>
                {
                    b.Property<Guid>("PrecioWebProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("AnteriorPrecio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("NuevoPrecio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("PrecioWebId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("char(36)");

                    b.HasKey("PrecioWebProductoId");

                    b.HasIndex("PrecioWebId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PrecioWebProducto");
                });

            modelBuilder.Entity("Dominio.entities.Producto", b =>
                {
                    b.Property<Guid>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("StockMinimo")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Dominio.entities.ProductoProveedor", b =>
                {
                    b.Property<Guid>("ProductoProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Preciocompra")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Preciounitario")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("ProductoProveedorId");

                    b.ToTable("ProductoProveedor");

                    b.HasData(
                        new
                        {
                            ProductoProveedorId = new Guid("5caa93f0-3f62-43e3-8418-de8a0844180d"),
                            Preciocompra = 805.06m,
                            Preciounitario = 934.06m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("335e88f5-ec25-4fa9-b448-eb802624ae75"),
                            Preciocompra = 515.48m,
                            Preciounitario = 20.57m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("9ad4ac0c-56a2-495c-b18f-404d35e2595e"),
                            Preciocompra = 554.51m,
                            Preciounitario = 650.67m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("76611625-e493-4d24-9d71-790b62bd4378"),
                            Preciocompra = 703.98m,
                            Preciounitario = 21.11m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("cabebff7-9b6d-4072-89c8-92fce6ef2a8d"),
                            Preciocompra = 317.02m,
                            Preciounitario = 520.36m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("879270a0-33ac-4e92-94c5-97627cf0964f"),
                            Preciocompra = 917.08m,
                            Preciounitario = 544.84m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("46defa87-a46d-4226-9ea2-7226e4bd7ab3"),
                            Preciocompra = 82.38m,
                            Preciounitario = 258.79m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("8d29e189-0759-4590-88b7-1fb908e4b98d"),
                            Preciocompra = 219.62m,
                            Preciounitario = 665.34m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("0c1dae8e-640d-46ad-9c22-107ffc1e5b72"),
                            Preciocompra = 74.62m,
                            Preciounitario = 706.19m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("9d78c114-8d0f-4bd0-b02f-770066a6c4fe"),
                            Preciocompra = 722.24m,
                            Preciounitario = 586.83m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("2c4f1531-c139-4945-80e2-508f288b8f22"),
                            Preciocompra = 331.37m,
                            Preciounitario = 491.83m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("2227f996-0438-44c0-ad4b-7f93be941b6a"),
                            Preciocompra = 764.86m,
                            Preciounitario = 255.93m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("efb6651a-a7a6-497d-b030-31381f8ba953"),
                            Preciocompra = 928.87m,
                            Preciounitario = 952.70m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("f1b4ac25-01e4-4953-aab1-a107856ff207"),
                            Preciocompra = 351.54m,
                            Preciounitario = 897.50m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("d250d2da-9713-43f2-8cd2-918ece870ac9"),
                            Preciocompra = 731.96m,
                            Preciounitario = 35.74m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("9a896212-e2de-48ef-aeb5-cc9915f3cb21"),
                            Preciocompra = 721.49m,
                            Preciounitario = 345.21m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("e364a05c-5e6f-40c9-b526-055dc7314f3b"),
                            Preciocompra = 775.42m,
                            Preciounitario = 796.04m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("cfbc0c5b-0948-43e2-9f59-2c85a5a2aaef"),
                            Preciocompra = 341.47m,
                            Preciounitario = 794.23m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("bf027b6c-0b07-4fb9-8172-a87b7e7d0ab9"),
                            Preciocompra = 791.98m,
                            Preciounitario = 839.98m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("7cf65263-bb02-4325-89fb-f22c7827f4d4"),
                            Preciocompra = 328.76m,
                            Preciounitario = 48.92m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("889b6fa2-2aec-45f2-bcef-0e17d7bec959"),
                            Preciocompra = 10.78m,
                            Preciounitario = 570.34m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("db432f06-0040-4c4e-8ff1-94cb51dc423d"),
                            Preciocompra = 655.26m,
                            Preciounitario = 109.34m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("593a99af-487c-4e7d-a7cf-acc6c64f9a42"),
                            Preciocompra = 51.05m,
                            Preciounitario = 975.27m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("04e80c47-c593-4d67-be1c-bb87a2111432"),
                            Preciocompra = 453.53m,
                            Preciounitario = 539.57m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("1bd4ba98-8375-4ce7-af35-89d0f86136b1"),
                            Preciocompra = 45.34m,
                            Preciounitario = 357.08m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("7396d7e0-fb06-4b2e-a819-565f064819a3"),
                            Preciocompra = 474.53m,
                            Preciounitario = 170.05m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("04ebf9ef-3297-4c41-a75b-84e0a90f57e5"),
                            Preciocompra = 992.56m,
                            Preciounitario = 644.79m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("e14c6d7a-a8d8-428d-a4df-72d1da27e292"),
                            Preciocompra = 537.93m,
                            Preciounitario = 861.74m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("588e95a3-9dc9-48c3-9f6e-e74170c0e75b"),
                            Preciocompra = 927.92m,
                            Preciounitario = 753.11m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("07f59584-bc67-45b5-881f-c60a7839b35a"),
                            Preciocompra = 434.88m,
                            Preciounitario = 309.07m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("95df3988-cd85-4824-b1d8-170288228884"),
                            Preciocompra = 809.00m,
                            Preciounitario = 832.34m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("a32fd5ec-0407-41cc-995a-20afd36048be"),
                            Preciocompra = 237.19m,
                            Preciounitario = 862.40m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("cf0f0d0f-f68e-44b7-b353-117d06aef45c"),
                            Preciocompra = 185.61m,
                            Preciounitario = 925.92m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("11389a39-d9e7-4807-a209-38191249a5cc"),
                            Preciocompra = 543.35m,
                            Preciounitario = 420.63m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("a2354b1d-a4ed-4fe0-81f5-65cf15b820d3"),
                            Preciocompra = 631.39m,
                            Preciounitario = 586.42m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("87049c8d-66f5-46d5-b977-a2a92ac97fff"),
                            Preciocompra = 171.91m,
                            Preciounitario = 398.22m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("09004982-7843-4dc2-abed-5ac0782bb89e"),
                            Preciocompra = 683.62m,
                            Preciounitario = 973.41m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("4fd7bbf8-15c8-403a-9184-2df01b7f33fa"),
                            Preciocompra = 173.02m,
                            Preciounitario = 166.09m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("ee8f66b4-ee7e-4fc6-9782-8a063326755c"),
                            Preciocompra = 318.21m,
                            Preciounitario = 297.68m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("5b779871-73a5-45f2-a31f-26517cb21cb1"),
                            Preciocompra = 693.45m,
                            Preciounitario = 496.26m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("1d11ab51-32a9-4b43-85e6-e266b9df8608"),
                            Preciocompra = 687.51m,
                            Preciounitario = 416.37m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("088fedaa-2f23-4817-a1d5-9c453805b592"),
                            Preciocompra = 52.84m,
                            Preciounitario = 491.36m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("09caa86d-caba-4bac-a404-f58f6a7af43d"),
                            Preciocompra = 405.41m,
                            Preciounitario = 659.12m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("48249c6a-5b7b-4202-8395-8a1353df8c7d"),
                            Preciocompra = 260.74m,
                            Preciounitario = 40.88m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("06b14ef2-c748-4ebd-93a1-ce95e88bd026"),
                            Preciocompra = 605.00m,
                            Preciounitario = 151.91m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("cdbaa7d4-0e7f-4c4f-af86-069c25fa4ab9"),
                            Preciocompra = 180.48m,
                            Preciounitario = 169.73m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("8b723b47-1f6f-4f1e-8a1c-16f4e74bc2f7"),
                            Preciocompra = 57.56m,
                            Preciounitario = 627.30m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("b3c02f61-b1b8-4101-9240-ba7cb9ee6969"),
                            Preciocompra = 404.80m,
                            Preciounitario = 678.74m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("b93869ba-9655-493a-96cb-c94e2358988c"),
                            Preciocompra = 558.19m,
                            Preciounitario = 294.94m
                        },
                        new
                        {
                            ProductoProveedorId = new Guid("43436ac6-bc44-4169-aa12-e924b9fe8b7b"),
                            Preciocompra = 815.93m,
                            Preciounitario = 427.18m
                        });
                });

            modelBuilder.Entity("Dominio.entities.Proveedor", b =>
                {
                    b.Property<Guid>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contacto")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Fecharegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ProductoProveedorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RUC")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("ProveedorId");

                    b.HasIndex("ProductoProveedorId");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("Dominio.entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Dominio.entities.Venta", b =>
                {
                    b.Property<Guid>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("PrecioTotal")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("VentaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Dominio.entities.CompraPago", b =>
                {
                    b.HasOne("Dominio.entities.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoId");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("Dominio.entities.DetalleInventario", b =>
                {
                    b.HasOne("Dominio.entities.Inventario", "Inventario")
                        .WithMany("DetalleInventariolista")
                        .HasForeignKey("InventarioId");

                    b.HasOne("Dominio.entities.Producto", "Producto")
                        .WithMany("DetalleInventariolista")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Inventario");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.entities.DetallePedido", b =>
                {
                    b.HasOne("Dominio.entities.Producto", "Producto")
                        .WithMany("DetallePedidolista")
                        .HasForeignKey("ProductoId");

                    b.HasOne("Dominio.entities.Venta", "Venta")
                        .WithMany("DetallePedidolista")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dominio.entities.Devolucion", b =>
                {
                    b.HasOne("Dominio.entities.DetallePedido", "DetallePedido")
                        .WithMany("Devolucionlista")
                        .HasForeignKey("DetallePedidoId");

                    b.Navigation("DetallePedido");
                });

            modelBuilder.Entity("Dominio.entities.Inventario", b =>
                {
                    b.HasOne("Dominio.entities.Proveedor", "Proveedor")
                        .WithMany("Inventariolista")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Dominio.entities.InventarioProducto", b =>
                {
                    b.HasOne("Dominio.entities.Inventario", "Inventario")
                        .WithMany("InventarioProductolista")
                        .HasForeignKey("InventarioId");

                    b.HasOne("Dominio.entities.ProductoProveedor", "ProductoProveedor")
                        .WithMany("InventarioProducto")
                        .HasForeignKey("ProductoProveedorId");

                    b.Navigation("Inventario");

                    b.Navigation("ProductoProveedor");
                });

            modelBuilder.Entity("Dominio.entities.PrecioWebProducto", b =>
                {
                    b.HasOne("Dominio.entities.PrecioWeb", "PrecioWeb")
                        .WithMany("PrecioWeblista")
                        .HasForeignKey("PrecioWebId");

                    b.HasOne("Dominio.entities.Producto", "Producto")
                        .WithMany("PrecioWebProductolista")
                        .HasForeignKey("ProductoId");

                    b.Navigation("PrecioWeb");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.entities.Producto", b =>
                {
                    b.HasOne("Dominio.entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Dominio.entities.Proveedor", b =>
                {
                    b.HasOne("Dominio.entities.ProductoProveedor", "ProductoProveedor")
                        .WithMany("Proveedorlista")
                        .HasForeignKey("ProductoProveedorId");

                    b.Navigation("ProductoProveedor");
                });

            modelBuilder.Entity("Dominio.entities.Venta", b =>
                {
                    b.HasOne("Dominio.entities.Cliente", "Cliente")
                        .WithMany("Ventalista")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Dominio.entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Dominio.entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Dominio.entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.entities.Cliente", b =>
                {
                    b.Navigation("Ventalista");
                });

            modelBuilder.Entity("Dominio.entities.DetallePedido", b =>
                {
                    b.Navigation("Devolucionlista");
                });

            modelBuilder.Entity("Dominio.entities.Inventario", b =>
                {
                    b.Navigation("DetalleInventariolista");

                    b.Navigation("InventarioProductolista");
                });

            modelBuilder.Entity("Dominio.entities.PrecioWeb", b =>
                {
                    b.Navigation("PrecioWeblista");
                });

            modelBuilder.Entity("Dominio.entities.Producto", b =>
                {
                    b.Navigation("DetalleInventariolista");

                    b.Navigation("DetallePedidolista");

                    b.Navigation("PrecioWebProductolista");
                });

            modelBuilder.Entity("Dominio.entities.ProductoProveedor", b =>
                {
                    b.Navigation("InventarioProducto");

                    b.Navigation("Proveedorlista");
                });

            modelBuilder.Entity("Dominio.entities.Proveedor", b =>
                {
                    b.Navigation("Inventariolista");
                });

            modelBuilder.Entity("Dominio.entities.Venta", b =>
                {
                    b.Navigation("DetallePedidolista");
                });
#pragma warning restore 612, 618
        }
    }
}
